{"version":3,"file":"datepicker-month-view.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-month-view.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,KAAK,EAAe,MAAM,EAAE,YAAY,EAAC,MAAM,eAAe;OAE1E,EAAC,OAAO,EAAC,MAAM,YAAY;OAC3B,EAAC,iBAAiB,EAAC,MAAM,mBAAmB;AAInD;IAWE,gCAAmB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAFzC,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;IAEO,CAAC;IAE9C,yCAAQ,GAAR,UAAS,GAAiB;QACxB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,2CAAU,GAAV,UAAW,GAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEvE,2CAAU,GAAV,UAAW,IAAa,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEzF,4CAAW,GAAX,UAAY,GAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAEnH,yCAAQ,GAAR,UAAS,GAAiB,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACxG,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,2BAA2B;oBACrC,IAAI,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC;oBAC1B,MAAM,EAAE,CAAC,8eAoBR,CAAC;oBACF,QAAQ,EAAE,ijCAmBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,qCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;KAC1B,EAF6F,CAE7F,CAAC;IACK,qCAAc,GAA2C;QAChE,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAC5B,CAAC;IACF,6BAAC;AAAD,CAAC,AAvFD,IAuFC","sourcesContent":["import {Component, Input, TemplateRef, Output, EventEmitter} from '@angular/core';\nimport {MonthViewModel, DayViewModel} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {DayTemplateContext} from './datepicker-day-template-context';\n\n\nexport class NgbDatepickerMonthView {\n   dayTemplate: TemplateRef<DayTemplateContext>;\n   disabled: boolean;\n   month: MonthViewModel;\n   outsideDays: 'visible' | 'hidden' | 'collapsed';\n   selectedDate: NgbDate;\n   showWeekdays;\n   showWeekNumbers;\n\n   select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n) {}\n\n  doSelect(day: DayViewModel) {\n    if (!this.isDisabled(day) && !this.isCollapsed(day) && !this.isHidden(day)) {\n      this.select.emit(NgbDate.from(day.date));\n    }\n  }\n\n  isDisabled(day: DayViewModel) { return this.disabled || day.disabled; }\n\n  isSelected(date: NgbDate) { return this.selectedDate && this.selectedDate.equals(date); }\n\n  isCollapsed(day: DayViewModel) { return this.outsideDays === 'collapsed' && this.month.number !== day.date.month; }\n\n  isHidden(day: DayViewModel) { return this.outsideDays === 'hidden' && this.month.number !== day.date.month; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-month-view',\n  host: {'class': 'd-block'},\n  styles: [`\n    .ngb-dp-weekday, .ngb-dp-week-number {\n      line-height: 2rem;\n    }\n    .ngb-dp-day, .ngb-dp-weekday, .ngb-dp-week-number {\n      width: 2rem;\n      height: 2rem;      \n    }\n    .ngb-dp-day {\n      cursor: pointer;\n    }\n    .ngb-dp-day.disabled, .ngb-dp-day.hidden, .ngb-dp-day.collapsed {\n      cursor: default;\n    }\n    :host/deep/.ngb-dp-day.collapsed > * {\n      display: none;\n    }\n    :host/deep/.ngb-dp-day.hidden > * {\n      visibility: hidden;\n    }\n  `],\n  template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week d-flex\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small text-center text-info font-italic\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <div *ngFor=\"let week of month.weeks\" class=\"ngb-dp-week d-flex\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-center font-italic text-muted\">{{ week.number }}</div>\n      <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" [class.disabled]=\"isDisabled(day)\"\n      [class.collapsed]=\"isCollapsed(day)\" [class.hidden]=\"isHidden(day)\">\n          <template [ngTemplateOutlet]=\"dayTemplate\"\n          [ngOutletContext]=\"{date: {year: day.date.year, month: day.date.month, day: day.date.day},\n            currentMonth: month.number,\n            disabled: isDisabled(day),\n            selected: isSelected(day.date)}\">\n          </template>\n      </div>\n    </div>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dayTemplate': [{ type: Input },],\n'disabled': [{ type: Input },],\n'month': [{ type: Input },],\n'outsideDays': [{ type: Input },],\n'selectedDate': [{ type: Input },],\n'showWeekdays': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'select': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}