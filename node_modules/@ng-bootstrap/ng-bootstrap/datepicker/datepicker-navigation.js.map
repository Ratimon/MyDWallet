{"version":3,"file":"datepicker-navigation.js","sourceRoot":"","sources":["../../src/datepicker/datepicker-navigation.ts"],"names":[],"mappings":"OAAO,EAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAC,MAAM,eAAe;OAC7D,EAAC,eAAe,EAAC,MAAM,yBAAyB;OAEhD,EAAC,iBAAiB,EAAC,MAAM,mBAAmB;OAC5C,EAAC,WAAW,EAAC,MAAM,gBAAgB;AAG1C;IAcE,iCAAmB,IAAuB,EAAU,SAAsB;QAAvD,SAAI,GAAJ,IAAI,CAAmB;QAAU,cAAS,GAAT,SAAS,CAAa;QAb1E,eAAU,GAAG,eAAe,CAAC;QAU5B,aAAQ,GAAG,IAAI,YAAY,EAAmB,CAAC;QAC/C,WAAM,GAAG,IAAI,YAAY,EAAW,CAAC;IAEuC,CAAC;IAE9E,4CAAU,GAAV,UAAW,KAAsB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEjE,8CAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACvG,CAAC;IAED,8CAAY,GAAZ;QACE,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtH,CAAC;IAED,4CAAU,GAAV,UAAW,IAAa,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD,kCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,2BAA2B;oBACrC,IAAI,EAAE,EAAC,OAAO,EAAE,gCAAgC,EAAE,mBAAmB,EAAE,aAAa,EAAC;oBACrF,MAAM,EAAE,CAAC,m1BAkCR,CAAC;oBACF,QAAQ,EAAE,gtBAgBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,sCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,iBAAiB,GAAG;QAC3B,EAAC,IAAI,EAAE,WAAW,GAAG;KACpB,EAH6F,CAG7F,CAAC;IACK,sCAAc,GAA2C;QAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACrC,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;QAC/B,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;KAC5B,CAAC;IACF,8BAAC;AAAD,CAAC,AAtGD,IAsGC","sourcesContent":["import {Component, Input, Output, EventEmitter} from '@angular/core';\nimport {NavigationEvent} from './datepicker-view-model';\nimport {NgbDate} from './ngb-date';\nimport {NgbDatepickerI18n} from './datepicker-i18n';\nimport {NgbCalendar} from './ngb-calendar';\n\n\nexport class NgbDatepickerNavigation {\n  navigation = NavigationEvent;\n\n   date: NgbDate;\n   disabled: boolean;\n   maxDate: NgbDate;\n   minDate: NgbDate;\n   months: number;\n   showSelect: boolean;\n   showWeekNumbers: boolean;\n\n   navigate = new EventEmitter<NavigationEvent>();\n   select = new EventEmitter<NgbDate>();\n\n  constructor(public i18n: NgbDatepickerI18n, private _calendar: NgbCalendar) {}\n\n  doNavigate(event: NavigationEvent) { this.navigate.emit(event); }\n\n  nextDisabled() {\n    return this.disabled || (this.maxDate && this._calendar.getNext(this.date, 'm').after(this.maxDate));\n  }\n\n  prevDisabled() {\n    const prevDate = this._calendar.getPrev(this.date, 'm');\n    return this.disabled || (this.minDate && prevDate.year <= this.minDate.year && prevDate.month < this.minDate.month);\n  }\n\n  selectDate(date: NgbDate) { this.select.emit(date); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngb-datepicker-navigation',\n  host: {'class': 'd-flex justify-content-between', '[class.collapsed]': '!showSelect'},\n  styles: [`\n    :host {\n      height: 2rem;\n      line-height: 1.85rem;\n    }\n    :host.collapsed {\n      margin-bottom: -2rem;        \n    }\n    .ngb-dp-navigation-chevron::before {\n      border-style: solid;\n      border-width: 0.2em 0.2em 0 0;\n      content: '';\n      display: inline-block;\n      height: 0.75em;\n      transform: rotate(-135deg);\n      -webkit-transform: rotate(-135deg);\n      -ms-transform: rotate(-135deg);\n      width: 0.75em;\n      margin: 0 0 0 0.5rem;\n    }    \n    .ngb-dp-navigation-chevron.right:before {\n      -webkit-transform: rotate(45deg);\n      -ms-transform: rotate(45deg);\n      transform: rotate(45deg);\n      margin: 0 0.5rem 0 0;\n    }\n    .btn-link {\n      cursor: pointer;\n      outline: 0;\n    }\n    .btn-link[disabled] {\n      cursor: not-allowed;\n      opacity: .65;\n    }    \n  `],\n  template: `\n    <button type=\"button\" class=\"btn-link\" (click)=\"!!doNavigate(navigation.PREV)\" [disabled]=\"prevDisabled()\">\n      <span class=\"ngb-dp-navigation-chevron\"></span>    \n    </button>\n    \n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"d-block\" [style.width.rem]=\"months * 9\"\n      [date]=\"date\"\n      [minDate]=\"minDate\"\n      [maxDate]=\"maxDate\"\n      [disabled] = \"disabled\"\n      (select)=\"selectDate($event)\">\n    </ngb-datepicker-navigation-select>\n    \n    <button type=\"button\" class=\"btn-link\" (click)=\"!!doNavigate(navigation.NEXT)\" [disabled]=\"nextDisabled()\">\n      <span class=\"ngb-dp-navigation-chevron right\"></span>\n    </button>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgbDatepickerI18n, },\n{type: NgbCalendar, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'date': [{ type: Input },],\n'disabled': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'minDate': [{ type: Input },],\n'months': [{ type: Input },],\n'showSelect': [{ type: Input },],\n'showWeekNumbers': [{ type: Input },],\n'navigate': [{ type: Output },],\n'select': [{ type: Output },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}